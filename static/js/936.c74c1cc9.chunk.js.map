{"version":3,"file":"static/js/936.c74c1cc9.chunk.js","mappings":"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","sources":["components/CircularRating/CircularRating.tsx","components/LazyLoadPic/LazyLoadPic.tsx","webpack://movie-catalog/./src/components/MovieCard/styles.module.css?b65e","components/MovieCard/MovieCard.tsx","webpack://movie-catalog/./src/pages/Home/styles.module.css?399f","pages/Home/CarouselSection.tsx","pages/Home/Home.tsx","services/Genres.ts"],"sourcesContent":["import { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport { FC } from \"react\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nexport const CircularRating: FC<{ rating: number; type?: string }> = ({ rating, type }) => {\r\n  const bgc = type === \"big\" ? \"#13293b\" : \"#d6d6d6\";\r\n  const trailColor = rating === 0 ? \"red\" : \"#d6d6d6\";\r\n\r\n  return (\r\n    <CircularProgressbar\r\n      value={rating}\r\n      maxValue={10}\r\n      text={rating != 0 ? rating.toString() : \"0\"}\r\n      strokeWidth={type === \"big\" ? 13 : 9}\r\n      background={true}\r\n      backgroundPadding={5}\r\n      styles={buildStyles({\r\n        pathColor: rating < 5 ? \"red\" : rating < 7 ? \"orange\" : \"green\",\r\n        backgroundColor: bgc,\r\n        textSize: \"30px\",\r\n        pathTransitionDuration: 3,\r\n        textColor: \"white\",\r\n        trailColor: trailColor,\r\n      })}\r\n    />\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nimport \"./LazyLoadPic.css\";\r\n\r\ninterface LazyLoadPicProps {\r\n  src: string;\r\n  alt: string;\r\n  className?: string;\r\n}\r\n\r\nexport const LazyLoadPic: FC<LazyLoadPicProps> = ({ src, alt, className }) => {\r\n  return <LazyLoadImage effect=\"blur\" src={src} alt={alt} className={className} />;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_card\":\"styles_movie_card__7Z2B0\",\"poster_wrapper\":\"styles_poster_wrapper__fD5x8\",\"poster_holder\":\"styles_poster_holder__wqMRO\",\"poster\":\"styles_poster__7iT7j\",\"circleRating\":\"styles_circleRating__k8xL5\",\"rating_text\":\"styles_rating_text__bSfik\",\"genres\":\"styles_genres__idU5Y\",\"genre\":\"styles_genre__SF0Sl\",\"text_block\":\"styles_text_block__GAgMb\",\"movie_title\":\"styles_movie_title__y-f9K\",\"movie_date\":\"styles_movie_date__3SskO\",\"need_more_data\":\"styles_need_more_data__lUO9I\"};","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Genres } from \"../../services/Genres\";\r\nimport { MovieType } from \"../../types/movie\";\r\nimport NoPoster from \"../../assets/no-poster.png\";\r\nimport styles from \"./styles.module.css\";\r\nimport { LazyLoadPic } from \"../LazyLoadPic/LazyLoadPic\";\r\nimport { CircularRating } from \"../CircularRating/CircularRating\";\r\n\r\nexport const MovieCard: FC<MovieType> = ({\r\n  poster_path,\r\n  title,\r\n  vote_average,\r\n  release_date,\r\n  genre_ids = [],\r\n  id,\r\n}) => {\r\n  if (poster_path === \"https://image.tmdb.org/t/p/w220_and_h330_facenull\") {\r\n    poster_path = NoPoster;\r\n  }\r\n\r\n  return (\r\n    <Link to={\"/movies/\" + id} className={styles.movie_card}>\r\n      <div className={styles.poster_wrapper}>\r\n        <span className={styles.poster_holder}>\r\n          <LazyLoadPic src={poster_path} alt={title} className=\"movie_card__poster\" />\r\n        </span>\r\n        <div className={styles.circleRating}>\r\n          <span className={styles.rating_text}>\r\n            <CircularRating rating={+vote_average} />\r\n          </span>\r\n        </div>\r\n        <div className={styles.genres}>\r\n          {genre_ids.map((genreId: number) => {\r\n            return (\r\n              <div className={styles.genre} key={genreId}>\r\n                {Genres.getGenreNameById(genreId)}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.text_block}>\r\n        <div className={styles.movie_title}>{title}</div>\r\n        <div className={styles.movie_date}>{release_date}</div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"hero_banner\":\"styles_hero_banner__mAIkj\",\"hero_image\":\"styles_hero_image__IdNVk\",\"hero_background\":\"styles_hero_background__52qYS\",\"hero_shadow\":\"styles_hero_shadow__QlhA0\",\"hero_content_wrapper\":\"styles_hero_content_wrapper__9+kc6\",\"hero_content\":\"styles_hero_content__BdpES\",\"hero_title\":\"styles_hero_title__rjd+u\",\"hero_description\":\"styles_hero_description__nL0zU\",\"search_row\":\"styles_search_row__6xLfz\",\"carouselSection\":\"styles_carouselSection__Gbsd-\",\"carouselHeader\":\"styles_carouselHeader__hrhA8\",\"carouselTitle\":\"styles_carouselTitle__f8nMa\",\"carousel\":\"styles_carousel__BZBa7\",\"contentWrapper\":\"styles_contentWrapper__Sbv8p\",\"carouselItems\":\"styles_carouselItems__ZDQjm\"};","import { FC } from \"react\";\r\nimport { MovieCard } from \"../../components/MovieCard/MovieCard\";\r\nimport { MovieType } from \"../../types/movie\";\r\nimport styles from \"./styles.module.css\";\r\n\r\ntype CarouselSectionPropsType = {\r\n  movies: MovieType[];\r\n  sectionTitle: string;\r\n};\r\n\r\nexport const CarouselSection: FC<CarouselSectionPropsType> = ({ movies, sectionTitle }) => {\r\n  return (\r\n    <div className={styles.carouselSection}>\r\n      <div className={styles.carouselHeader}>\r\n        <span className={styles.carouselTitle}>{sectionTitle}</span>\r\n      </div>\r\n      <div className={styles.carousel}>\r\n        <div className={styles.contentWrapper}>\r\n          <div className={styles.carouselItems}>\r\n            {movies.map((movie) => (\r\n              <MovieCard\r\n                key={movie.id}\r\n                poster_path={\"https://image.tmdb.org/t/p/w220_and_h330_face\" + movie.poster_path}\r\n                title={movie.title}\r\n                vote_average={movie.vote_average}\r\n                release_date={movie.release_date}\r\n                genre_ids={movie.genre_ids}\r\n                id={movie.id}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { IMDB } from \"../../services/IMDB\";\r\nimport { getTrending } from \"../../store/trendingSlice\";\r\nimport { getTopRated } from \"../../store/topRatedSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CarouselSection } from \"./CarouselSection\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { FC, KeyboardEvent, useEffect, useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport { LazyLoadPic } from \"../../components/LazyLoadPic/LazyLoadPic\";\r\nimport { clearMoviesList } from \"../../store/moviesSlice\";\r\n\r\nconst Home: FC = () => {\r\n  const [heroImgUrl, setHeroImgUrl] = useState(\"\");\r\n  const [searchInputValue, setSearchInputValue] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const appDispatch = useAppDispatch();\r\n\r\n  const trending = useAppSelector((state) => state.trending.trending);\r\n  const topRated = useAppSelector((state) => state.topRated.topRated);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    getHeroImg();\r\n    appDispatch(getTrending());\r\n    appDispatch(getTopRated());\r\n  }, []);\r\n\r\n  const getHeroImg = async () => {\r\n    const imgUrl = await IMDB.getRandomPoster();\r\n    setHeroImgUrl(imgUrl);\r\n  };\r\n\r\n  const startSearchHandler = (e: KeyboardEvent<HTMLElement>) => {\r\n    if (e.key === \"Enter\") {\r\n      goToSearchPage();\r\n    }\r\n  };\r\n\r\n  const goToSearchPage = () => {\r\n    if (searchInputValue !== \"\") {\r\n      appDispatch(clearMoviesList());\r\n      navigate(\"/search/\" + searchInputValue);\r\n    }\r\n  };\r\n\r\n  const searchInputChangeHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setSearchInputValue(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div className={styles.hero_banner}>\r\n        <div className={styles.hero_image}>\r\n          <span className={styles.hero_background}>\r\n            <LazyLoadPic\r\n              src={\"https://image.tmdb.org/t/p/original/\" + heroImgUrl}\r\n              alt={\"Hero image background\"}\r\n              className={\"hero_img\"}\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div className={styles.hero_shadow}></div>\r\n\r\n        <div className={styles.hero_content_wrapper}>\r\n          <div className={styles.hero_content}>\r\n            <h1 className={styles.hero_title}>Welcome.</h1>\r\n            <p className={styles.hero_description}>\r\n              Millions of movies, TV shows and people to discover. Explore now.\r\n            </p>\r\n            <div className={styles.search_row}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search for a movie or tv show....\"\r\n                value={searchInputValue}\r\n                onKeyDown={startSearchHandler}\r\n                onChange={searchInputChangeHandler}\r\n              />\r\n              <button onClick={() => goToSearchPage()}>Search</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <CarouselSection movies={trending} sectionTitle=\"Trending\" />\r\n      <CarouselSection movies={topRated} sectionTitle=\"Top Rated\" />\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport { GenreType } from \"../types/genre\";\r\nimport { API_URL, HEADERS as headers } from \"../utils/constants\";\r\n\r\nlet genresIsLoading = false;\r\n\r\nconst getGenres = async () => {\r\n  genresIsLoading = true;\r\n  const reqUrl = API_URL + \"genre/movie/list\";\r\n  const data = await axios.get(reqUrl, { headers });\r\n  if (data.status != 200) {\r\n    return false;\r\n  }\r\n  localStorage.setItem(\"genres\", JSON.stringify(data.data.genres));\r\n  genresIsLoading = false;\r\n};\r\n\r\nconst getGenreNameById = (genreId: number): string => {\r\n  const genres = localStorage.getItem(\"genres\");\r\n  if (genres === null && !genresIsLoading) {\r\n    getGenres();\r\n  }\r\n  if (genres != null) {\r\n    const genresArr: GenreType[] = JSON.parse(genres);\r\n    const genreName = genresArr.find((genre) => genre.id === genreId)?.name;\r\n    if (genreName != undefined) {\r\n      return genreName;\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const allGenres = (): GenreType[] => {\r\n  const genres = localStorage.getItem(\"genres\");\r\n  if (genres === null && !genresIsLoading) {\r\n    getGenres();\r\n  }\r\n  if (genres != null) {\r\n    const genresArr: GenreType[] = JSON.parse(genres);\r\n    return genresArr;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const Genres = {\r\n  getGenreNameById,\r\n  allGenres,\r\n};\r\n"],"names":["CircularRating","_ref","rating","type","bgc","trailColor","_jsx","CircularProgressbar","value","maxValue","text","toString","strokeWidth","background","backgroundPadding","styles","buildStyles","pathColor","backgroundColor","textSize","pathTransitionDuration","textColor","LazyLoadPic","src","alt","className","LazyLoadImage","effect","MovieCard","poster_path","title","vote_average","release_date","_ref$genre_ids","genre_ids","id","NoPoster","_jsxs","Link","to","children","map","genreId","Genres","CarouselSection","movies","sectionTitle","movie","_useState","useState","_useState2","_slicedToArray","heroImgUrl","setHeroImgUrl","_useState3","_useState4","searchInputValue","setSearchInputValue","navigate","useNavigate","appDispatch","useAppDispatch","trending","useAppSelector","state","topRated","useEffect","window","scrollTo","getHeroImg","getTrending","getTopRated","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imgUrl","wrap","_context","prev","next","IMDB","sent","stop","apply","arguments","goToSearchPage","clearMoviesList","placeholder","onKeyDown","e","key","onChange","currentTarget","onClick","genresIsLoading","getGenres","reqUrl","data","API_URL","axios","headers","status","abrupt","localStorage","setItem","JSON","stringify","genres","getGenreNameById","getItem","_genresArr$find","genreName","parse","find","genre","name","undefined","allGenres"],"sourceRoot":""}
{"version":3,"file":"static/js/832.0c06d107.chunk.js","mappings":"0OACA,EAA6B,2BAA7B,EAA8E,oCAA9E,EAAuI,mCAAvI,EAA8L,kCAA9L,EAAuP,qC,SCqDvP,EA9CuB,WACrB,IAAMA,GAASC,EAAAA,EAAAA,MACfC,GAAoCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,EAAYR,EAAOS,OAAST,EAAOS,OAAS,GAE5CC,GAAcC,EAAAA,EAAAA,KACdC,GAASC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMF,OAAOA,MAAM,IACtDG,GAAYF,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMF,OAAOG,SAAS,IAalE,OAXAC,EAAAA,EAAAA,YAAU,WAERC,OAAOC,SAAS,EAAG,GACnBX,EAAc,EAChB,GAAG,CAACC,KAEJQ,EAAAA,EAAAA,YAAU,WAERN,GAAYS,EAAAA,EAAAA,IAAgB,CAAEC,MAAOZ,EAAWa,KAAMf,IACxD,GAAG,CAACA,EAAYE,KAGdc,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,UAChCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAA2BC,SAAA,EACzCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA0BC,SACrB,IAAlBb,EAAOe,QACNL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA4BC,SAAC,+BAE7CC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAyBC,SAAA,CAAC,sBACfjB,EAAU,UAIzCc,EAAAA,EAAAA,KAACM,EAAAA,EAAc,CACbC,WAAYjB,EAAOe,OACnBG,KAAM,WACJvB,GAAc,SAACD,GAAU,OAAKA,EAAa,CAAC,GAC9C,EACAyB,QAAShB,EACTiB,QAAQV,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,IAAMR,UACdH,EAAAA,EAAAA,KAACY,EAAAA,EAAc,CAACtB,OAAQA,UAKlC,C","sources":["webpack://movie-catalog/./src/pages/Search/styles.module.css?76a0","pages/Search/SearchPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_page\":\"styles_movie_page__jK-Xw\",\"movie_page__wrapper\":\"styles_movie_page__wrapper__m3jHy\",\"movie_page__header\":\"styles_movie_page__header__C4Kpq\",\"movie_page__title\":\"styles_movie_page__title__IPTiX\",\"search_page_noResult\":\"styles_search_page_noResult__KRXqw\"};","import { FC, useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LazyLoadMovies } from \"../../components/LazyLoadMovies/LazyLoadMovies\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { getSearchMovies } from \"../../store/moviesSlice\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst SearchPage: FC = () => {\r\n  const params = useParams();\r\n  const [moviesPage, setMoviesPage] = useState(1);\r\n  const searchReq = params.search ? params.search : \"\";\r\n\r\n  const appDispatch = useAppDispatch();\r\n  const movies = useAppSelector((state) => state.movies.movies);\r\n  const morePages = useAppSelector((state) => state.movies.morePages);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"searchReq useEffect\");\r\n    window.scrollTo(0, 0);\r\n    setMoviesPage(1);\r\n  }, [searchReq]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"getSearchMovies\", searchReq, moviesPage);\r\n    appDispatch(getSearchMovies({ query: searchReq, page: moviesPage }));\r\n  }, [moviesPage, searchReq]);\r\n\r\n  return (\r\n    <div className={styles.movie_page}>\r\n      <div className={styles.movie_page__wrapper}>\r\n        <div className={styles.movie_page__header}>\r\n          {movies.length === 0 ? (\r\n            <div className={styles.search_page_noResult}>Sorry, Results not found!</div>\r\n          ) : (\r\n            <div className={styles.movie_page__title}>\r\n              Search results of &apos;{searchReq}&apos;\r\n            </div>\r\n          )}\r\n        </div>\r\n        <InfiniteScroll\r\n          dataLength={movies.length}\r\n          next={() => {\r\n            setMoviesPage((moviesPage) => moviesPage + 1);\r\n          }}\r\n          hasMore={morePages}\r\n          loader={<></>}>\r\n          <LazyLoadMovies movies={movies} />\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"names":["params","useParams","_useState","useState","_useState2","_slicedToArray","moviesPage","setMoviesPage","searchReq","search","appDispatch","useAppDispatch","movies","useAppSelector","state","morePages","useEffect","window","scrollTo","getSearchMovies","query","page","_jsx","className","styles","children","_jsxs","length","InfiniteScroll","dataLength","next","hasMore","loader","_Fragment","LazyLoadMovies"],"sourceRoot":""}
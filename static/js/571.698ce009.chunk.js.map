{"version":3,"file":"static/js/571.698ce009.chunk.js","mappings":"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","sources":["components/CircularRating/CircularRating.tsx","components/LazyLoadPic/LazyLoadPic.tsx","webpack://movie-catalog/./src/components/MovieCard/styles.module.css?b65e","components/MovieCard/MovieCard.tsx","webpack://movie-catalog/./src/components/Modal/styles.module.css?45f9","components/Modal/Modal.tsx","utils/helpers.tsx","webpack://movie-catalog/./src/components/PlayBtn/styles.module.css?356e","components/PlayBtn/PlaySvg.tsx","components/PlayBtn/PlayBtn.tsx","webpack://movie-catalog/./src/components/MovieDetails/styles.module.css?7de5","components/MovieDetails/MovieDetails.tsx","webpack://movie-catalog/./src/components/ActorItem/styles.module.css?9430","components/ActorItem/ActorItem.tsx","webpack://movie-catalog/./src/components/VideoItem/styles.module.css?cd3f","components/VideoItem/VideoItem.tsx","webpack://movie-catalog/./src/pages/Movie/styles.module.css?1e66","pages/Movie/MoviePage.tsx","services/Genres.ts"],"sourcesContent":["import { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport { FC } from \"react\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nexport const CircularRating: FC<{ rating: number; type?: string }> = ({ rating, type }) => {\r\n  const bgc = type === \"big\" ? \"#13293b\" : \"#d6d6d6\";\r\n  const trailColor = rating === 0 ? \"red\" : \"#d6d6d6\";\r\n\r\n  return (\r\n    <CircularProgressbar\r\n      value={rating}\r\n      maxValue={10}\r\n      text={rating != 0 ? rating.toString() : \"0\"}\r\n      strokeWidth={type === \"big\" ? 13 : 9}\r\n      background={true}\r\n      backgroundPadding={5}\r\n      styles={buildStyles({\r\n        pathColor: rating < 5 ? \"red\" : rating < 7 ? \"orange\" : \"green\",\r\n        backgroundColor: bgc,\r\n        textSize: \"30px\",\r\n        pathTransitionDuration: 3,\r\n        textColor: \"white\",\r\n        trailColor: trailColor,\r\n      })}\r\n    />\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nimport \"./LazyLoadPic.css\";\r\n\r\ninterface LazyLoadPicProps {\r\n  src: string;\r\n  alt: string;\r\n  className?: string;\r\n}\r\n\r\nexport const LazyLoadPic: FC<LazyLoadPicProps> = ({ src, alt, className }) => {\r\n  return <LazyLoadImage effect=\"blur\" src={src} alt={alt} className={className} />;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_card\":\"styles_movie_card__7Z2B0\",\"poster_wrapper\":\"styles_poster_wrapper__fD5x8\",\"poster_holder\":\"styles_poster_holder__wqMRO\",\"poster\":\"styles_poster__7iT7j\",\"circleRating\":\"styles_circleRating__k8xL5\",\"rating_text\":\"styles_rating_text__bSfik\",\"genres\":\"styles_genres__idU5Y\",\"genre\":\"styles_genre__SF0Sl\",\"text_block\":\"styles_text_block__GAgMb\",\"movie_title\":\"styles_movie_title__y-f9K\",\"movie_date\":\"styles_movie_date__3SskO\",\"need_more_data\":\"styles_need_more_data__lUO9I\"};","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Genres } from \"../../services/Genres\";\r\nimport { MovieType } from \"../../types/movie\";\r\nimport NoPoster from \"../../assets/no-poster.png\";\r\nimport styles from \"./styles.module.css\";\r\nimport { LazyLoadPic } from \"../LazyLoadPic/LazyLoadPic\";\r\nimport { CircularRating } from \"../CircularRating/CircularRating\";\r\n\r\nexport const MovieCard: FC<MovieType> = ({\r\n  poster_path,\r\n  title,\r\n  vote_average,\r\n  release_date,\r\n  genre_ids = [],\r\n  id,\r\n}) => {\r\n  if (poster_path === \"https://image.tmdb.org/t/p/w220_and_h330_facenull\") {\r\n    poster_path = NoPoster;\r\n  }\r\n\r\n  return (\r\n    <Link to={\"/movies/\" + id} className={styles.movie_card}>\r\n      <div className={styles.poster_wrapper}>\r\n        <span className={styles.poster_holder}>\r\n          <LazyLoadPic src={poster_path} alt={title} className=\"movie_card__poster\" />\r\n        </span>\r\n        <div className={styles.circleRating}>\r\n          <span className={styles.rating_text}>\r\n            <CircularRating rating={+vote_average} />\r\n          </span>\r\n        </div>\r\n        <div className={styles.genres}>\r\n          {genre_ids.map((genreId: number) => {\r\n            return (\r\n              <div className={styles.genre} key={genreId}>\r\n                {Genres.getGenreNameById(genreId)}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.text_block}>\r\n        <div className={styles.movie_title}>{title}</div>\r\n        <div className={styles.movie_date}>{release_date}</div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"styles_modal__c8QaF\",\"active\":\"styles_active__XEk52\",\"modal_content\":\"styles_modal_content__GnQti\",\"modalHeader\":\"styles_modalHeader__B4BKo\"};","import { FC } from \"react\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { closeVideoModalActive, setVideoKey } from \"../../store/movieSlice\";\r\nimport ReactPlayer from \"react-player\";\r\nimport styles from \"./styles.module.css\";\r\n\r\ntype ModalProps = {\r\n  modalActive: boolean;\r\n  videoKey: string;\r\n  // setModalVideoKey: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\nexport const Modal: FC<ModalProps> = ({\r\n  modalActive,\r\n  videoKey,\r\n  // setModalVideoKey,\r\n}) => {\r\n  const appDispatch = useAppDispatch();\r\n  return (\r\n    <div\r\n      className={modalActive ? `${styles.modal} ${styles.active}` : `${styles.modal}`}\r\n      onClick={() => {\r\n        appDispatch(closeVideoModalActive())\r\n        appDispatch(setVideoKey(''))\r\n        // setModalVideoKey(\"\");\r\n      }}>\r\n      <div className={styles.modal_content}>\r\n        <div className={styles.modalHeader}>\r\n          <span className={styles.btn}>Close</span>\r\n        </div>\r\n        <ReactPlayer\r\n          url={`https://www.youtube.com/watch?v=${videoKey}`}\r\n          controls\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          // playing={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const runtimeToStr = (runtime: number): string => {\r\n  const minutes = runtime % 60;\r\n  const hours = (runtime - minutes) / 60;\r\n  return hours + \"h \" + minutes + \"m\";\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"play_zone__container\":\"styles_play_zone__container__cK+Qn\",\"play_zone__header\":\"styles_play_zone__header__FJP5r\",\"play_zone__poster\":\"styles_play_zone__poster__+kGoz\",\"circle\":\"styles_circle__sRqzX\",\"triangle\":\"styles_triangle__57CcT\",\"play_zone__title\":\"styles_play_zone__title__5tMLB\",\"play_video_btn\":\"styles_play_video_btn__EHOay\",\"text\":\"styles_text__7xCPq\"};","import styles from \"./styles.module.css\";\r\n\r\nexport const PlaySvg = () => {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      width=\"80px\"\r\n      height=\"80px\"\r\n      viewBox=\"0 0 213.7 213.7\"\r\n      enableBackground=\"new 0 0 213.7 213.7\"\r\n      xmlSpace=\"preserve\">\r\n      <polygon\r\n        className={styles.triangle}\r\n        fill=\"none\"\r\n        strokeWidth=\"7\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeMiterlimit=\"10\"\r\n        points=\"73.5,62.5 148.5,105.8 73.5,149.1 \"></polygon>\r\n      <circle\r\n        className={styles.circle}\r\n        fill=\"none\"\r\n        strokeWidth=\"7\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeMiterlimit=\"10\"\r\n        cx=\"106.8\"\r\n        cy=\"106.8\"\r\n        r=\"103.3\"></circle>\r\n    </svg>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { useAppDispatch } from \"../../hooks\";\r\nimport { openVideoModalActive, setVideoKey } from \"../../store/movieSlice\";\r\nimport { PlaySvg } from \"./PlaySvg\";\r\nimport styles from \"./styles.module.css\";\r\n\r\ntype PlayBtnProps = {\r\n  videoKey?: string;\r\n  name?: string;\r\n  watchTrailerPlayVideoBtn?: boolean;\r\n};\r\n\r\nexport const PlayBtn: FC<PlayBtnProps> = ({ videoKey, name, watchTrailerPlayVideoBtn = false }) => {\r\n  const appDispatch = useAppDispatch();\r\n  return watchTrailerPlayVideoBtn ? (\r\n    <span\r\n      className={styles.play_video_btn}\r\n      onClick={() => {\r\n        appDispatch(openVideoModalActive());\r\n        videoKey !== undefined && appDispatch(setVideoKey(videoKey));\r\n      }}>\r\n      <PlaySvg />\r\n      <span className={styles.text}>Watch Trailer</span>\r\n    </span>\r\n  ) : (\r\n    <div\r\n      className={styles.play_zone__container}\r\n      onClick={() => {\r\n        appDispatch(openVideoModalActive());\r\n        videoKey !== undefined && appDispatch(setVideoKey(videoKey));\r\n      }}>\r\n      <div className={styles.play_zone__header}>\r\n        <img\r\n          className={styles.play_zone__poster}\r\n          alt=\"\"\r\n          src={`https://img.youtube.com/vi/${videoKey}/mqdefault.jpg`}></img>\r\n        <PlaySvg />\r\n      </div>\r\n      <div className={styles.play_zone__title}>{name}</div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_details_content\":\"styles_movie_details_content__V5lJT\",\"movie_details_title\":\"styles_movie_details_title__wED7M\",\"movie_details_subtitle\":\"styles_movie_details_subtitle__lLPpm\",\"movie_details_genres\":\"styles_movie_details_genres__8YnEx\",\"movie_details_genre\":\"styles_movie_details_genre__+wwXm\",\"movie_details__row\":\"styles_movie_details__row__U8WUg\",\"circular_rating\":\"styles_circular_rating__ONhDc\",\"movie_details_overview_title\":\"styles_movie_details_overview_title__r7y9C\",\"movie_details_overview_description\":\"styles_movie_details_overview_description__GzJOB\",\"movie_details_info\":\"styles_movie_details_info__W53nJ\",\"movie_details_info_item\":\"styles_movie_details_info_item__5bGaM\",\"movie_details_info_item_title\":\"styles_movie_details_info_item_title__YKfLK\",\"movie_details_info_item_content\":\"styles_movie_details_info_item_content__6xCzX\"};","import { FC } from \"react\";\r\nimport { useAppSelector } from \"../../hooks\";\r\nimport { FullMovieType } from \"../../types/movie\";\r\nimport { runtimeToStr } from \"../../utils/helpers\";\r\nimport { PlayBtn } from \"../PlayBtn/PlayBtn\";\r\nimport styles from \"./styles.module.css\";\r\nimport { CircularRating } from \"../CircularRating/CircularRating\";\r\n\r\nexport const MovieDetails: FC<{\r\n  movie: FullMovieType;\r\n  videoKey: string;\r\n}> = ({ movie, videoKey }) => {\r\n  const director = useAppSelector((state) => state.movie.director);\r\n  const writer = useAppSelector((state) => state.movie.writer);\r\n\r\n  return (\r\n    <div className={styles.movie_details_content}>\r\n      <h1 className={styles.movie_details_title}>{movie.title}</h1>\r\n      <h3 className={styles.movie_details_subtitle}>{movie.subtitle}</h3>\r\n      <div className={styles.movie_details_genres}>\r\n        {movie.genres?.map((genre, index) => {\r\n          return (\r\n            <div key={index} className={styles.movie_details_genre}>\r\n              {genre}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={styles.movie_details__row}>\r\n        <span className={styles.circular_rating}>\r\n          <CircularRating rating={+movie.vote_average || 0} type='big'/>\r\n        </span>\r\n        {videoKey !== \"\" ? (\r\n          <span className={styles.movie_details_overview}>\r\n            <PlayBtn videoKey={videoKey} watchTrailerPlayVideoBtn={true} />\r\n          </span>\r\n        ) : (\r\n          <h2 className={styles.movie_details_overview}>No Official Video</h2>\r\n        )}\r\n      </div>\r\n      <div className={styles.movie_details_overview}>\r\n        <div className={styles.movie_details_overview_title}>Overview</div>\r\n        <div className={styles.movie_details_overview_description}>{movie.overview}</div>\r\n      </div>\r\n      <div className={styles.movie_details_info}>\r\n        <div className={styles.movie_details_info_item}>\r\n          <span className={styles.movie_details_info_item_title}>Status:</span>\r\n          <span className={styles.movie_details_info_item_content}>{movie.status}</span>\r\n        </div>\r\n\r\n        {movie.release_date && (\r\n          <div className={styles.movie_details_info_item}>\r\n            <span className={styles.movie_details_info_item_title}>Release Date:</span>\r\n            <span className={styles.movie_details_info_item_content}>{movie.release_date}</span>\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.movie_details_info_item}>\r\n          <span className={styles.movie_details_info_item_title}>Runtime:</span>\r\n          <span className={styles.movie_details_info_item_content}>\r\n            {runtimeToStr(movie.runtime)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.movie_details_info}>\r\n        <div className={styles.movie_details_info_item}>\r\n          <span className={styles.movie_details_info_item_title}>Director:</span>\r\n          <span className={styles.movie_details_info_item_content}>{director}</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.movie_details_info}>\r\n        <div className={styles.movie_details_info_item}>\r\n          <span className={styles.movie_details_info_item_title}>Writer:</span>\r\n          <span className={styles.movie_details_info_item_content}>{writer}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"actor_item\":\"styles_actor_item__ggAXr\",\"actor_name\":\"styles_actor_name__VoD46\",\"actor_role\":\"styles_actor_role__0XUF9\",\"actor_avatar\":\"styles_actor_avatar__02CIR\"};","import { FC } from \"react\";\r\nimport noAvatar from \"../../assets/no-avatar.png\";\r\nimport { LazyLoadPic } from \"../LazyLoadPic/LazyLoadPic\";\r\nimport styles from \"./styles.module.css\";\r\n\r\ntype ActorItemPropsType = {\r\n  avatar: string;\r\n  name: string;\r\n  role: string;\r\n};\r\n\r\nexport const ActorItem: FC<ActorItemPropsType> = ({ name, avatar, role }) => {\r\n  if (avatar === \"https://image.tmdb.org/t/p/w138_and_h175_facenull\") {\r\n    avatar = noAvatar;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.actor_item}>\r\n      <div className={styles.actor_avatar}>\r\n        <LazyLoadPic src={avatar} alt={name} className={\"actor_avatar__img\" } />\r\n      </div>\r\n      <div className={styles.actor_name}>{name}</div>\r\n      <div className={styles.actor_role}>{role}</div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"video_item\":\"styles_video_item__QD-N6\"};","import { FC } from \"react\";\r\nimport { PlayBtn } from \"../PlayBtn/PlayBtn\";\r\nimport styles from \"./styles.module.css\";\r\n\r\ntype videoItemType = {\r\n  name: string;\r\n  videoKey: string;\r\n};\r\n\r\nexport const VideoItem: FC<videoItemType> = ({ name, videoKey }) => {\r\n  return (\r\n    <div className={styles.video_item}>\r\n      <PlayBtn videoKey={videoKey} name={name} />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_details_page\":\"styles_movie_details_page__WO10m\",\"background_logo\":\"styles_background_logo__GpKFi\",\"movie_details_container\":\"styles_movie_details_container__2FrGO\",\"movie_details_poster\":\"styles_movie_details_poster__WLjQz\",\"movie_details_castSectionShadow\":\"styles_movie_details_castSectionShadow__I+9E4\",\"movie_details_castSection\":\"styles_movie_details_castSection__LWjj4\",\"actors_row\":\"styles_actors_row__hIhSh\",\"movie_details_similarMovie__section\":\"styles_movie_details_similarMovie__section__lqw7j\",\"movie_details_similarMovie__title\":\"styles_movie_details_similarMovie__title__-aHHd\",\"movie_details_similarMovie\":\"styles_movie_details_similarMovie__kMmIg\",\"movie_details_videos__section\":\"styles_movie_details_videos__section__tun5m\",\"movie_details_videos__title\":\"styles_movie_details_videos__title__Ovd9d\",\"movie_details_videos__content\":\"styles_movie_details_videos__content__ugG+v\",\"movie_details_videos__video_title\":\"styles_movie_details_videos__video_title__C+v2z\"};","import { FC } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\nimport { MovieCard } from \"../../components/MovieCard/MovieCard\";\r\nimport { MovieDetails } from \"../../components/MovieDetails/MovieDetails\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { getMovie, getSimilar, getTeam, getVideos } from \"../../store/movieSlice\";\r\nimport { clearMoviesList } from \"../../store/moviesSlice\";\r\nimport { ActorItem } from \"../../components/ActorItem/ActorItem\";\r\nimport { VideoItem } from \"../../components/VideoItem/VideoItem\";\r\nimport NoPoster from \"../../assets/no-poster.png\";\r\nimport styles from \"./styles.module.css\";\r\nimport { LazyLoadPic } from \"../../components/LazyLoadPic/LazyLoadPic\";\r\n\r\nconst MoviePage: FC = () => {\r\n  const appDispatch = useAppDispatch();\r\n  const movie = useAppSelector((state) => state.movie.movie);\r\n  const team = useAppSelector((state) => state.movie.team);\r\n  const modalActive = useAppSelector((state) => state.movie.videoModalActive);\r\n  const similarMovies = useAppSelector((state) => state.movie.similarMovies);\r\n  const videos = useAppSelector((state) => state.movie.videos);\r\n  const modalVideoKey = useAppSelector((state) => state.movie.videoKey);\r\n\r\n  const params = useParams();\r\n  const movieId = params.id === undefined ? 0 : +params.id;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    appDispatch(clearMoviesList());\r\n    appDispatch(getMovie(movieId));\r\n    appDispatch(getTeam(movieId));\r\n    appDispatch(getSimilar(movieId));\r\n    appDispatch(getVideos(movieId));\r\n  }, [params]);\r\n\r\n  let movie_details_poster = NoPoster;\r\n  if (movie.poster_path != null) {\r\n    movie_details_poster = \"https://image.tmdb.org/t/p/original\" + movie.poster_path;\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.movie_details_page}>\r\n      <div className={styles.background_logo}>\r\n        {movie.background && (\r\n          <LazyLoadPic\r\n            src={\"https://image.tmdb.org/t/p/w1920_and_h800_multi_faces\" + movie.background}\r\n            alt={movie.title}\r\n            className=\"movie_card__background_logo\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={styles.movie_details_castSectionShadow}></div>\r\n      <div className={styles.movie_details_container}>\r\n        <div className={styles.movie_details_poster}>\r\n          <LazyLoadPic src={movie_details_poster} alt={movie.title} />\r\n        </div>\r\n        <MovieDetails movie={movie} videoKey={videos.length > 0 ? videos[0].key : \"\"} />\r\n      </div>\r\n\r\n      {team.length > 0 && (\r\n        <div className={styles.movie_details_castSection}>\r\n          <h2>Top Cast</h2>\r\n          <div className={styles.actors_row}>\r\n            {team.map((el, index) => {\r\n              return (\r\n                <ActorItem\r\n                  key={index}\r\n                  avatar={\"https://image.tmdb.org/t/p/w138_and_h175_face\" + el.profile_path}\r\n                  name={el.name}\r\n                  role={el.character ? el.character : \"\"}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {videos.length > 0 && (\r\n        <div className={styles.movie_details_videos__section}>\r\n          <Modal modalActive={modalActive} videoKey={modalVideoKey} />\r\n          <h2 className={styles.movie_details_videos__title}>Official Videos</h2>\r\n          <div className={styles.movie_details_videos__content}>\r\n            {videos.map(({ id, key, name }) => (\r\n              <VideoItem key={id} videoKey={key} name={name} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {similarMovies.length > 0 && (\r\n        <div className={styles.movie_details_similarMovie__section}>\r\n          <h2 className={styles.movie_details_similarMovie__title}>Similar Movies (API opinion)</h2>\r\n          <div className={styles.movie_details_similarMovie}>\r\n            {similarMovies.map(\r\n              ({ id, poster_path, title, vote_average, release_date, genre_ids }) => (\r\n                <MovieCard\r\n                  key={id}\r\n                  id={id}\r\n                  poster_path={\"https://image.tmdb.org/t/p/w220_and_h330_face\" + poster_path}\r\n                  title={title}\r\n                  vote_average={vote_average}\r\n                  release_date={release_date}\r\n                  genre_ids={genre_ids}\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import axios from \"axios\";\r\nimport { GenreType } from \"../types/genre\";\r\nimport { API_URL, HEADERS as headers } from \"../utils/constants\";\r\n\r\nlet genresIsLoading = false;\r\n\r\nconst getGenres = async () => {\r\n  genresIsLoading = true;\r\n  const reqUrl = API_URL + \"genre/movie/list\";\r\n  const data = await axios.get(reqUrl, { headers });\r\n  if (data.status != 200) {\r\n    return false;\r\n  }\r\n  localStorage.setItem(\"genres\", JSON.stringify(data.data.genres));\r\n  genresIsLoading = false;\r\n};\r\n\r\nconst getGenreNameById = (genreId: number): string => {\r\n  const genres = localStorage.getItem(\"genres\");\r\n  if (genres === null && !genresIsLoading) {\r\n    getGenres();\r\n  }\r\n  if (genres != null) {\r\n    const genresArr: GenreType[] = JSON.parse(genres);\r\n    const genreName = genresArr.find((genre) => genre.id === genreId)?.name;\r\n    if (genreName != undefined) {\r\n      return genreName;\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const allGenres = (): GenreType[] => {\r\n  const genres = localStorage.getItem(\"genres\");\r\n  if (genres === null && !genresIsLoading) {\r\n    getGenres();\r\n  }\r\n  if (genres != null) {\r\n    const genresArr: GenreType[] = JSON.parse(genres);\r\n    return genresArr;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const Genres = {\r\n  getGenreNameById,\r\n  allGenres,\r\n};\r\n"],"names":["CircularRating","_ref","rating","type","bgc","trailColor","_jsx","CircularProgressbar","value","maxValue","text","toString","strokeWidth","background","backgroundPadding","styles","buildStyles","pathColor","backgroundColor","textSize","pathTransitionDuration","textColor","LazyLoadPic","src","alt","className","LazyLoadImage","effect","MovieCard","poster_path","title","vote_average","release_date","_ref$genre_ids","genre_ids","id","NoPoster","_jsxs","Link","to","children","map","genreId","Genres","Modal","modalActive","videoKey","appDispatch","useAppDispatch","concat","onClick","closeVideoModalActive","setVideoKey","ReactPlayer","url","controls","width","height","runtimeToStr","runtime","minutes","PlaySvg","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","strokeLinecap","strokeLinejoin","strokeMiterlimit","points","cx","cy","r","PlayBtn","name","_ref$watchTrailerPlay","watchTrailerPlayVideoBtn","openVideoModalActive","undefined","MovieDetails","_movie$genres","movie","director","useAppSelector","state","writer","subtitle","genres","genre","index","overview","status","ActorItem","avatar","role","noAvatar","VideoItem","team","videoModalActive","similarMovies","videos","modalVideoKey","params","useParams","movieId","useEffect","window","scrollTo","clearMoviesList","getMovie","getTeam","getSimilar","getVideos","movie_details_poster","length","key","el","profile_path","character","_ref2","genresIsLoading","getGenres","_asyncToGenerator","_regeneratorRuntime","mark","_callee","reqUrl","data","wrap","_context","prev","next","API_URL","axios","headers","sent","abrupt","localStorage","setItem","JSON","stringify","stop","apply","arguments","getGenreNameById","getItem","_genresArr$find","genreName","parse","find","allGenres"],"sourceRoot":""}